commit 810381ad90f638928ec2668c8ba3c3698fc34849
Author: Liu Xiang <liuxiang@ktjr.com>
Date:   Mon Apr 4 00:09:09 2022 +0800

    Make keybinding more reasonable

diff --git a/Action.c b/Action.c
index 9a7c3c5..211ea79 100644
--- a/Action.c
+++ b/Action.c
@@ -575,7 +575,7 @@ void Action_setBindings(Htop_Action* keys) {
    keys['q'] = actionQuit;
    keys['a'] = actionSetAffinity;
    keys[KEY_F(9)] = actionKill;
-   keys['k'] = actionKill;
+   keys[KEY_CTRL('K')] = actionKill;
    keys[KEY_RECLICK] = actionExpandOrCollapse;
    keys['+'] = actionExpandOrCollapse;
    keys['='] = actionExpandOrCollapse;
diff --git a/CategoriesPanel.c b/CategoriesPanel.c
index 437f1a7..ea9c3ff 100644
--- a/CategoriesPanel.c
+++ b/CategoriesPanel.c
@@ -85,6 +85,8 @@ static HandlerResult CategoriesPanel_eventHandler(Panel* super, int ch) {
       case KEY_CTRL('P'):
       case KEY_DOWN:
       case KEY_CTRL('N'):
+      case 'j':
+      case 'k':
       case KEY_NPAGE:
       case KEY_PPAGE:
       case KEY_HOME:
diff --git a/ColumnsPanel.c b/ColumnsPanel.c
index 8974ffd..c956f38 100644
--- a/ColumnsPanel.c
+++ b/ColumnsPanel.c
@@ -60,6 +60,7 @@ static HandlerResult ColumnsPanel_eventHandler(Panel* super, int ch) {
          }
          break;
       }
+      case 'k':
       case KEY_UP:
       {
          if (!this->moving) {
@@ -76,6 +77,7 @@ static HandlerResult ColumnsPanel_eventHandler(Panel* super, int ch) {
          result = HANDLED;
          break;
       }
+      case 'j':
       case KEY_DOWN:
       {
          if (!this->moving) {
diff --git a/OpenFilesScreen.c b/OpenFilesScreen.c
index 9ea333b..24d8261 100644
--- a/OpenFilesScreen.c
+++ b/OpenFilesScreen.c
@@ -100,7 +100,7 @@ static OpenFiles_ProcessData* OpenFilesScreen_getProcessData(pid_t pid) {
          exit(1);
       dup2(fdnull, STDERR_FILENO);
       close(fdnull);
-      execlp("lsof", "lsof", "-P", "-p", buffer, "-F", NULL);
+      execlp("lsof", "lsof", "-P", "-n", "-p", buffer, "-F", NULL);
       exit(127);
    }
    close(fdpair[1]);
diff --git a/Panel.c b/Panel.c
index 1e53b4a..febdccd 100644
--- a/Panel.c
+++ b/Panel.c
@@ -375,11 +375,13 @@ bool Panel_onKey(Panel* this, int key) {
    
    int size = Vector_size(this->items);
    switch (key) {
+   case 'j':
    case KEY_DOWN:
    case KEY_CTRL('N'):
       this->selected++;
       break;
    case KEY_UP:
+   case 'k':
    case KEY_CTRL('P'):
       this->selected--;
       break;
@@ -393,18 +395,27 @@ bool Panel_onKey(Panel* this, int key) {
       this->selected--;
       break;
    #endif
-   case KEY_LEFT:
    case KEY_CTRL('B'):
-      if (this->scrollH > 0) {
-         this->scrollH -= MAX(CRT_scrollHAmount, 0);
-         this->needsRedraw = true;
-      }
-      break;
-   case KEY_RIGHT:
+     this->selected -= (this->h - 1);
+     this->scrollV = MAX(0, this->scrollV - this->h + 1);
+     this->needsRedraw = true;
+     break;
+   case KEY_LEFT:
+     if (this->scrollH > 0) {
+       this->scrollH -= MAX(CRT_scrollHAmount, 0);
+       this->needsRedraw = true;
+     }
+     break;
    case KEY_CTRL('F'):
-      this->scrollH += CRT_scrollHAmount;
-      this->needsRedraw = true;
-      break;
+     this->selected += (this->h - 1);
+     this->scrollV = MAX(0, MIN(Vector_size(this->items) - this->h,
+                                this->scrollV + this->h - 1));
+     this->needsRedraw = true;
+     break;
+   case KEY_RIGHT:
+     this->scrollH += CRT_scrollHAmount;
+     this->needsRedraw = true;
+     break;
    case KEY_PPAGE:
       this->selected -= (this->h - 1);
       this->scrollV = MAX(0, this->scrollV - this->h + 1);
